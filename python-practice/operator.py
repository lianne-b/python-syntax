# -*- coding: utf-8 -*-

# ---- 연산자 ---- 

# 시프트 연산자 (shift operator <</>>)
# 비트 값을 주어진 숫자 만큼 부호 방향으로 이동시키는 연산자 

a = 2 
# 00000010

# 왼쪽으로 시프트 하는 경우, 2의 배수만큼 수가 증가한다
print(a << 3) # 2의 3제곱(8)을 곱한 값인 16이 출력됨 (2*2^3)

# 오른쪽으로 시프트 하는 경우, 2의 배수만큼 수가 나눠진다
print(a >> 3) # 더 이상 오른쪽으로 이동할 수 없을 때까지 이동하기에, 0이 출력됨

# 예: 2를 왼쪽으로 시프트 -> 2를 두 번 곱한 것과 같은 결과: 즉, 2의 2제곱만큼 수가 증가한다 
# 00001000



# 거듭제곱 연산자 (power operator **)
# 특정 숫자의 몇 제곱, 즉 거듭제곱을 수행할 때 사용하는 연산자
# 왼쪽 피연산자를 밑, 오른쪽 피연산자를 지수로 한 값을 구한다
b = 2
c = 10
print(b ** c)



# 할당 연산자 (assignment operators) 
print(a == 5)

# a += b (a = a + b)
# a -= b (a = a - b / 두 값이 동일할 시 True 반환)
# a *= b (a = a * b)
# a /= b (a = a / b)
# a %= b (a = a % b)
# a //= b (a = a // b)
# a **= b (a = a ** b)
# a &= b (a = a & b) 
# a |= b (a = a | b)
# a ^= b (a = a ^ b)
# a >>= b (a = a >> b)
# a <<= b (a = a << b)
